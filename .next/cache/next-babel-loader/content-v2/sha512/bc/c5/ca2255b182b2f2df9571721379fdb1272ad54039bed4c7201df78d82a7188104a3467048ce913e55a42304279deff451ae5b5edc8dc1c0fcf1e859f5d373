{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/context/PlayerContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport var PlayerContextProvider = function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  var hasPrevious = currentEpisodeIndex > 0;\n  var hasNext = currentEpisodeIndex + 1 < episodeList.length;\n\n  function playNext() {\n    var nextEpisodeIndex = currentEpisodeIndex + 1;\n\n    if (hasNext) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n    if (hasPrevious) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      hasPrevious: hasPrevious,\n      playList: playList,\n      hasNext: hasNext,\n      playNext: playNext,\n      playPrevious: playPrevious,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/context/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state","hasPrevious","hasNext","length","playNext","nextEpisodeIndex","playPrevious"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAwBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,IAAMG,qBAAqB,GAAE,SAAvBA,qBAAuB,OAA6C;AAAA;;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;;AAAA,kBACzCH,QAAQ,CAAC,EAAD,CADiC;AAAA,MACxEI,WADwE;AAAA,MAC3DC,cAD2D;;AAAA,mBAEzBL,QAAQ,CAAC,CAAD,CAFiB;AAAA,MAExEM,mBAFwE;AAAA,MAEnDC,sBAFmD;;AAAA,mBAG7CP,QAAQ,CAAC,KAAD,CAHqC;AAAA,MAGxEQ,SAHwE;AAAA,MAG7DC,YAH6D;;AAK/E,WAASC,IAAT,CAAcC,OAAd,EAAgC;AAC9BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACD,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAChDT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAED;;AACD,WAASM,UAAT,GAAsB;AACpBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAyC;AACvCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACD;;AACD,MAAMC,WAAW,GAAGZ,mBAAmB,GAAG,CAA1C;AACA,MAAMa,OAAO,GAAIb,mBAAmB,GAAG,CAAvB,GAA2BF,WAAW,CAACgB,MAAvD;;AAEA,WAASC,QAAT,GAAoB;AAClB,QAAMC,gBAAgB,GAAGhB,mBAAmB,GAAG,CAA/C;;AAEA,QAAIa,OAAJ,EAAa;AACXZ,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,WAASiB,YAAT,GAAwB;AACtB,QAAIL,WAAJ,EAAiB;AACfX,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BF,MAAAA,WAAW,EAAXA,WAD6B;AAE7BE,MAAAA,mBAAmB,EAAnBA,mBAF6B;AAG7BI,MAAAA,IAAI,EAAJA,IAH6B;AAI7BQ,MAAAA,WAAW,EAAXA,WAJ6B;AAK7BN,MAAAA,QAAQ,EAARA,QAL6B;AAM7BO,MAAAA,OAAO,EAAPA,OAN6B;AAO7BE,MAAAA,QAAQ,EAARA,QAP6B;AAQ7BE,MAAAA,YAAY,EAAZA,YAR6B;AAS7Bf,MAAAA,SAAS,EAATA,SAT6B;AAU7BO,MAAAA,UAAU,EAAVA,UAV6B;AAW7BC,MAAAA,eAAe,EAAfA;AAX6B,KAA/B;AAAA,cAaIb;AAbJ;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAzDM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\n\ntype Episode = {\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  url: string;\n};\n\ntype PlayerContextData = {\n  episodeList: Episode[];\n  currentEpisodeIndex: number;\n  isPlaying: boolean;\n  play: (episode: Episode) => void;\n  setPlayingState: (state: boolean) => void;\n  togglePlay: () => void;\n  playList: (list: Episode[], index: number) => void;\n  playNext: () => void;\n  playPrevious: () => void;\n  hasNext:boolean;\n  hasPrevious:boolean;\n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\ntype PlayerContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const PlayerContextProvider =({ children }: PlayerContextProviderProps )=>{\n  const [episodeList, setEpisodeList] = useState([]);\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  function play(episode: Episode) {\n    setEpisodeList([episode])\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n  function playList(list: Episode[], index: number) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n\n  }\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state: boolean) {\n    setIsPlaying(state);\n  }\n  const hasPrevious = currentEpisodeIndex > 0 ;\n  const hasNext = (currentEpisodeIndex + 1) <episodeList.length;\n\n  function playNext() {\n    const nextEpisodeIndex = currentEpisodeIndex + 1;\n\n    if (hasNext) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n    if (hasPrevious) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1)\n    }\n  }\n\n  return (\n    <PlayerContext.Provider value={{\n      episodeList,\n      currentEpisodeIndex,\n      play,\n      hasPrevious,\n      playList,\n      hasNext,\n      playNext,\n      playPrevious,\n      isPlaying,\n      togglePlay,\n      setPlayingState\n    }}>\n      { children}\n    </PlayerContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}