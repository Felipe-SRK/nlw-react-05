{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { api } from '../../services/api';\nimport { convertDurantionToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurantionToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","convertDurantionToTimeString","Episode","episode","title","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,4BAAT,QAA6C,yCAA7C;AAkBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6C;AAC1D,sBACE;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAQP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,GAAG,CAACa,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAMP,OAAO,GAAG;AAEZW,IAAAA,EAAE,EAAEF,IAAI,CAACE,EAFG;AAGZV,IAAAA,KAAK,EAAEQ,IAAI,CAACR,KAHA;AAIZW,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAJJ;AAKZC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OALF;AAMZC,IAAAA,WAAW,EAAEpB,MAAM,CAACC,QAAQ,CAACc,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAC3DC,MAAAA,MAAM,EAAEpB;AADmD,KAA1C,CANP;AASZqB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CATJ;AAUZG,IAAAA,gBAAgB,EAAEtB,4BAA4B,CAC5CoB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CADsC,CAVlC;AAaZI,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WAbN;AAcZC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AAdH,GAAhB;AAkBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLvB,MAAAA;AADK,KADF;AAILwB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CA7BM","sourcesContent":["import { format, parseISO } from \"date-fns\";\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { api } from '../../services/api';\nimport { convertDurantionToTimeString } from '../../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  duration: string;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode } : EpisodeProps) {\n  return (\n    <h1>{episode.title}</h1>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  }\n}\n\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params\n\n  const { data } = await api.get(`/episodes/${slug}`) \n\n  const episode = {\n    \n      id: data.id,\n      title: data.title,\n      thumbnail: data.thumbnail,\n      members: data.members,\n      publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n        locale: ptBR,\n      }),\n      duration: Number(data.file.duration),\n      durationAsString: convertDurantionToTimeString(\n        Number(data.file.duration)\n      ),\n      description: data.description,\n      url: data.file.url,\n    \n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}