{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { api } from '../../services/api';\nimport Link from 'next/link';\nimport { convertDurantionToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './episode.module.scss';\nimport Image from \"next/image\";\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const {\n    data\n  } = await api.get(\"episodes\", {\n    params: {\n      _limit: 3,\n      _sort: \"published_at\",\n      _order: \"desc\"\n    }\n  });\n  const paths = data.map(episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n      locale: ptBR\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurantionToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","api","Link","convertDurantionToTimeString","styles","Image","Episode","episode","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html","getStaticPaths","data","get","params","_limit","_sort","_order","paths","map","slug","id","fallback","getStaticProps","ctx","published_at","locale","duration","Number","file","url","props","revalidate"],"mappings":"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","sourcesContent":["import { format, parseISO } from \"date-fns\";\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { api } from '../../services/api';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { convertDurantionToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss';\nimport Image from \"next/image\";\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  duration: string;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode } : EpisodeProps) {\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <Link href=\"/\">\n        <button type=\"button\">\n          <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n        </button>\n        </Link>\n        <Image \n        width={700}\n        height={160}\n        src={episode.thumbnail}\n        objectFit=\"cover\"\n        />\n        <button type=\"button\">\n          <img src=\"/play.svg\" alt=\"Tocar\"/>\n        </button>\n      </div>\n      <header>\n        <h1>{episode.title}</h1>\n        <span>{episode.members}</span>\n        <span>{episode.publishedAt}</span>\n        <span>{episode.durationAsString}</span>\n      </header>\n      <div className={styles.description} dangerouslySetInnerHTML={{__html: episode.description}}/>\n    </div>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n\n  const { data } = await api.get(\"episodes\", {\n    params: {\n      _limit: 3,\n      _sort: \"published_at\",\n      _order: \"desc\",\n    },\n  });\n\n  const paths = data.map( episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    }\n  })\n\n  return {\n    paths,\n    fallback: 'blocking'\n  }\n}\n\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params\n\n  const { data } = await api.get(`/episodes/${slug}`) \n\n  const episode = {\n    \n      id: data.id,\n      title: data.title,\n      thumbnail: data.thumbnail,\n      members: data.members,\n      publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n        locale: ptBR,\n      }),\n      duration: Number(data.file.duration),\n      durationAsString: convertDurantionToTimeString(\n        Number(data.file.duration)\n      ),\n      description: data.description,\n      url: data.file.url,\n    \n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}