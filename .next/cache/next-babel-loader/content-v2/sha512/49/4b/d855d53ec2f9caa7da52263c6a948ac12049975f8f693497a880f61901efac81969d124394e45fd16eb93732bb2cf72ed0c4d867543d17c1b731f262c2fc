{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport styles from './episode.module.scss';\nimport Image from \"next/image\";\nimport { usePlayer } from \"../../context/PlayerContext\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/pages/episodes/[slug].tsx"],"names":["Link","styles","Image","usePlayer","Episode","episode","play","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AAIA,OAAOA,IAAP,MAAiB,WAAjB;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,SAAwBC,SAAxB,QAAyC,6BAAzC;;AAkBA,eAAe,SAASC,OAAT,OAA6C;AAAA;;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;;AAAA,mBACzCF,SAAS,EADgC;AAAA,MAClDG,IADkD,cAClDA,IADkD;;AAG1D,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACI,OAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACM,kBAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACA,QAAA,KAAK,EAAE,GADP;AAEA,QAAA,MAAM,EAAE,GAFR;AAGA,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHb;AAIA,QAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,OAAO,EAAE;AAAA,iBAAMF,IAAI,CAACD,OAAD,CAAV;AAAA,SAFT;AAAA,+BAIE;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eA0BE;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACY,WAAvB;AAAoC,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAAET,OAAO,CAACQ;AAAjB;AAA7D;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAjCuBT,O;UACLD,S;;;KADKC,O","sourcesContent":["import { format, parseISO } from \"date-fns\";\nimport { GetStaticPaths, GetStaticProps } from 'next'\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { api } from '../../services/api';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { convertDurantionToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss';\nimport Image from \"next/image\";\nimport { useContext } from \"react\";\nimport { PlayerContext, usePlayer } from \"../../context/PlayerContext\";\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode } : EpisodeProps) {\n  const { play } = usePlayer();\n\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <Link href=\"/\">\n        <button type=\"button\">\n          <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n        </button>\n        </Link>\n        <Image \n        width={700}\n        height={160}\n        src={episode.thumbnail}\n        objectFit=\"cover\"\n        />\n        <button \n        type=\"button\" \n        onClick={() => play(episode)}\n        >\n          <img src=\"/play.svg\" alt=\"Tocar\"/>\n        </button>\n      </div>\n      <header>\n        <h1>{episode.title}</h1>\n        <span>{episode.members}</span>\n        <span>{episode.publishedAt}</span>\n        <span>{episode.durationAsString}</span>\n      </header>\n      <div className={styles.description} dangerouslySetInnerHTML={{__html: episode.description}}/>\n    </div>\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n\n  const { data } = await api.get(\"episodes\", {\n    params: {\n      _limit: 2,\n      _sort: \"published_at\",\n      _order: \"desc\",\n    },\n  });\n\n  const paths = data.map( episode => {\n    return {\n      params: {\n        slug: episode.id\n      }\n    }\n  })\n\n  return {\n    paths,\n    fallback: 'blocking'\n  }\n}\n\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params\n\n  const { data } = await api.get(`/episodes/${slug}`) \n\n  const episode = {\n    \n      id: data.id,\n      title: data.title,\n      thumbnail: data.thumbnail,\n      members: data.members,\n      publishedAt: format(parseISO(data.published_at), \"d MMM yy\", {\n        locale: ptBR,\n      }),\n      duration: Number(data.file.duration),\n      durationAsString: convertDurantionToTimeString(\n        Number(data.file.duration)\n      ),\n      description: data.description,\n      url: data.file.url,\n    \n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}