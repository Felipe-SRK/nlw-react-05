{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/components/Player/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from \"next/image\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { usePlayer } from \"../../context/PlayerContext\";\nimport styles from \"./styles.module.scss\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { convertDurantionToTimeString } from \"../../utils/convertDurationToTimeString\";\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      isLooping = _usePlayer.isLooping,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasNext = _usePlayer.hasNext,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      isShuffling = _usePlayer.isShuffling,\n      hasPrevious = _usePlayer.hasPrevious;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function (event) {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"tocando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando Agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurantionToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            trackStyle: {\n              backgroundColor: \"#04d361\"\n            },\n            railStyle: {\n              backgroundColor: \"#9f75ff\"\n            },\n            handleStyle: {\n              borderColor: \"#04d361\",\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurantionToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        loop: isLooping,\n        autoPlay: true,\n        onLoadedMetadata: setupProgressListener,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          className: styles.playButton,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Proximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"c3lYTWj3BCA2tqq7MwzoPSRmvoo=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/felipesilva/nlw05/nlw-react-05-Podcast/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","usePlayer","styles","Slider","convertDurantionToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","isLooping","setPlayingState","playNext","playPrevious","hasNext","toggleLoop","toggleShuffle","isShuffling","hasPrevious","current","play","pause","setupProgressListener","currentTime","addEventListener","event","Math","floor","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","slider","backgroundColor","borderColor","borderWidth","emptySlider","duration","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport { useContext, useRef, useEffect, useState } from \"react\";\nimport { PlayerContext, usePlayer } from \"../../context/PlayerContext\";\nimport styles from \"./styles.module.scss\";\nimport Slider from \"rc-slider\";\n\nimport \"rc-slider/assets/index.css\";\nimport { convertDurantionToTimeString } from \"../../utils/convertDurationToTimeString\";\n\nexport function Player() {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [progress, setProgress] = useState(0);\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    togglePlay,\n    isLooping,\n    setPlayingState,\n    playNext,\n    playPrevious,\n    hasNext,\n    toggleLoop,\n    toggleShuffle,\n    isShuffling,\n    hasPrevious,\n  } = usePlayer();\n\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n\n    audioRef.current.addEventListener('timeupdate', event => {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  const episode = episodeList[currentEpisodeIndex];\n\n  return (\n    <div className={styles.playerContainer}>\n      <header>\n        <img src=\"/playing.svg\" alt=\"tocando\" />\n        <strong>Tocando Agora</strong>\n      </header>\n\n      {episode ? (\n        <div className={styles.currentEpisode}>\n          <Image\n            width={592}\n            height={592}\n            src={episode.thumbnail}\n            objectFit=\"cover\"\n          />\n          <strong>{episode.title}</strong>\n          <span>{episode.members}</span>\n        </div>\n      ) : (\n        <div className={styles.emptyPlayer}>\n          <strong>Selecione um podcast para ouvir</strong>\n        </div>\n      )}\n\n      <footer className={!episode ? styles.empty : \"\"}>\n        <div className={styles.progress}>\n        <span>{convertDurantionToTimeString(progress)}</span>\n          <div className={styles.slider}>\n            {episode ? (\n              <Slider\n                trackStyle={{ backgroundColor: \"#04d361\" }}\n                railStyle={{ backgroundColor: \"#9f75ff\" }}\n                handleStyle={{ borderColor: \"#04d361\", borderWidth: 4 }}\n              />\n            ) : (\n              <div className={styles.emptySlider} />\n            )}\n          </div>\n          <span>{convertDurantionToTimeString(episode?.duration ?? 0)}</span>\n        </div>\n\n        {episode && (\n          <audio\n            src={episode.url}\n            ref={audioRef}\n            loop={isLooping}\n            autoPlay\n            onLoadedMetadata={setupProgressListener}\n            onPlay={() => setPlayingState(true)}\n            onPause={() => setPlayingState(false)}\n          />\n        )}\n\n        <div className={styles.buttons}>\n          <button \n          type=\"button\" \n          disabled={!episode || episodeList.length === 1}\n          onClick={toggleShuffle}\n          className={isShuffling ? styles.isActive : ''}\n          >\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\" />\n          </button>\n          <button type=\"button\" onClick={playPrevious} disabled={!episode || !hasPrevious}>\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\" />\n          </button>\n          <button\n            type=\"button\"\n            disabled={!episode}\n            className={styles.playButton}\n            onClick={togglePlay}\n          >\n            {isPlaying ? (\n              <img src=\"/pause.svg\" alt=\"Tocar\" />\n            ) : (\n              <img src=\"/play.svg\" alt=\"Pausar\" />\n            )}\n          </button>\n          <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\n            <img src=\"/play-next.svg\" alt=\"Tocar Proximo\" />\n          </button>\n          <button \n          type=\"button\" \n          disabled={!episode}\n          onClick={toggleLoop}\n          className={isLooping ? styles.isActive : ''}>\n            <img src=\"/repeat.svg\" alt=\"Repetir\" />\n          </button>\n        </div>\n      </footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}